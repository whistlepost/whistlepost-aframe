plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.13.3'
    id 'biz.aQute.bnd.builder' version "$bndVersion"
    id "com.github.node-gradle.node" version "2.2.4"
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

scmVersion {
    tag {
        prefix = 'whistlepost-aframe-'
    }
    versionCreator 'versionWithBranch'
    branchVersionCreator = ['main': 'simple']
    nextVersion {
        suffix = 'pre'
        separator = '-'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = 8
targetCompatibility = 8

group = 'org.whistlepost'
version = scmVersion.version

ext {
    isReleaseVersion = !version.endsWith("SNAPSHOT")
}

node {
    download = true
}

task buildWebpack(type: NpmTask) {
    args = ['run', 'buildWebpack']
}

build.dependsOn buildWebpack
buildWebpack.dependsOn yarn
clean.dependsOn yarn_cache_clean

publishing {
    publications {
        "$name"(MavenPublication) {
            from components.java
            pom.withXml {
                asNode().appendNode('name', name)
                asNode().appendNode('description', description)
                asNode().appendNode('url', 'https://www.whistlepost.org')

                def scmNode = asNode().appendNode('scm')
                scmNode.appendNode('url', 'https://github.com/whistlepost/whistlepost-aframe')
                scmNode.appendNode('connection', 'scm:git@github.com:whistlepost/whistlepost-aframe.git')
                scmNode.appendNode('developerConnection', 'scm:git@github.com:whistlepost/whistlepost-aframe.git')

                def licenseNode = asNode().appendNode('licenses').appendNode('license')
                licenseNode.appendNode('name', 'Apache License')
                licenseNode.appendNode('url', 'https://raw.githubusercontent.com/whistlepost/whistlepost-aframe/main/LICENSE')
                licenseNode.appendNode('distribution', 'repo')

                def developerNode = asNode().appendNode('developers').appendNode('developer')
                developerNode.appendNode('id', 'fortuna')
                developerNode.appendNode('name', 'Ben Fortuna')
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = version.endsWith('SNAPSHOT') ? "https://oss.sonatype.org/content/repositories/snapshots/" :
                    "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

signing {
    required { isReleaseVersion }
    sign publishing.publications[name]
}
